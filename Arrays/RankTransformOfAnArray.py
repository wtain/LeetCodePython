"""
https://leetcode.com/problems/rank-transform-of-an-array/

Given an array of integers arr, replace each element with its rank.

The rank represents how large the element is. The rank has the following rules:

Rank is an integer starting from 1.
The larger the element, the larger the rank. If two elements are equal, their rank must be the same.
Rank should be as small as possible.


Example 1:

Input: arr = [40,10,20,30]
Output: [4,1,2,3]
Explanation: 40 is the largest element. 10 is the smallest. 20 is the second smallest. 30 is the third smallest.
Example 2:

Input: arr = [100,100,100]
Output: [1,1,1]
Explanation: Same elements share the same rank.
Example 3:

Input: arr = [37,12,28,9,100,56,80,5,12]
Output: [5,3,4,2,8,6,7,1,3]


Constraints:

0 <= arr.length <= 105
-109 <= arr[i] <= 109
"""
from typing import List


# Runtime: 424 ms, faster than 22.34% of Python3 online submissions for Rank Transform of an Array.
# Memory Usage: 33.9 MB, less than 46.57% of Python3 online submissions for Rank Transform of an Array.
# class Solution:
#     def arrayRankTransform(self, arr: List[int]) -> List[int]:
#         sarr = sorted([(x, i) for i, x in enumerate(arr)])
#         n = len(arr)
#         rank = 0
#         prev = None
#         for i in range(n):
#             if prev is None or sarr[i][0] != prev:
#                 rank += 1
#                 prev = sarr[i][0]
#             arr[sarr[i][1]] = rank
#         return arr

# Runtime: 328 ms, faster than 93.74% of Python3 online submissions for Rank Transform of an Array.
# Memory Usage: 33.4 MB, less than 51.84% of Python3 online submissions for Rank Transform of an Array.
class Solution:
    def arrayRankTransform(self, arr: List[int]) -> List[int]:
        vals = sorted(set(arr))
        vals = dict(zip(vals, range(1, len(vals)+1)))
        for i, v in enumerate(arr):
            arr[i] = vals[v]
        return arr


tests = [
    (
        [0, 0, -8],
        [2,2,1]
    ),

    (
        [0,-49,14,33,4,-37,38,45,-8,-1,18,9,48,35,-14,-27,48,7,30,25,12,-1,-2,-47,44,-5,-50,49,24,39,-38,-19,-12,-1,-38,-11,-44,15,-6,21,4,-13,-30,-3,32,-29,-50,-35,-16,19,14,37,-44,-1,-34,-15,24,11,10,-27,-24,23,-50,-19,-4,47,22,-31,0,-17,18,25,-8],
        [29,2,36,47,30,6,50,53,22,28,38,32,55,48,18,12,55,31,45,44,35,28,27,3,52,24,1,56,43,51,5,14,20,28,5,21,4,37,23,40,30,19,10,26,46,11,1,7,16,39,36,49,4,28,8,17,43,34,33,12,13,42,1,14,25,54,41,9,29,15,38,44,22]
    ),

    (
        [0,-49,14,33,4,-37,38,45,-8,-1,18,9,48,35,-14,-27,48,7,30,25,12,-1,-2,-47,44,-5,-50,49,24,39,-38,-19,-12,-1,-38,-11,-44,15,-6,21,4,-13,-30,-3,32,-29,-50,-35,-16,19,14,37,-44,-1,-34,-15,24,11,10,-27,-24,23,-50,-19,-4,47,22,-31,0],
        [28,2,35,46,29,6,49,52,21,27,37,31,54,47,17,12,54,30,44,43,34,27,26,3,51,23,1,55,42,50,5,14,19,27,5,20,4,36,22,39,29,18,10,25,45,11,1,7,15,38,35,48,4,27,8,16,42,33,32,12,13,41,1,14,24,53,40,9,28]
    ),

    (
        [24,15,-26,37,-40,-17,30,25,24,47,18,-43,-24,3,6,-15,48,3,-2,37,-48,-1,-34,5,40,19,-18,5,-8,15,34,-27,-28,-25,-22,-15,-12,-5,26,-7,8,-1,34,9,32,-45,30,5,16,43,46,-3,-37,-2,49,28,-29,-50,-23,8,-21,34,37,28,-1,-6,25,-24,-21,-14,-3,16,-45,-46,13,-16,-45,-26,1,24,-45,18,-19,-48,-17,22,-15,0,-49,14,33,4,-37,38,45,-8,-1,18,9,48,35,-14,-27,48,7,30,25,12,-1,-2,-47,44,-5,-50,49,24,39,-38,-19,-12,-1,-38,-11,-44,15,-6,21,4,-13,-30,-3,32,-29,-50,-35,-16,19,14,37,-44,-1,-34,-15,24,11,10,-27,-24,23,-50,-19,-4,47,22,-31,0,-17,18,25,-8],
        [63,56,19,72,9,27,67,64,63,80,58,8,21,44,47,29,81,44,40,72,3,41,13,46,75,59,26,46,34,56,70,18,17,20,23,29,32,37,65,35,49,41,70,50,68,6,67,46,57,76,79,39,11,40,82,66,16,1,22,49,24,70,72,66,41,36,64,21,24,30,39,57,6,5,54,28,6,19,43,63,6,58,25,3,27,61,29,42,2,55,69,45,11,73,78,34,41,58,50,81,71,30,18,81,48,67,64,53,41,40,4,77,37,1,82,63,74,10,25,32,41,10,33,7,56,36,60,45,31,15,39,68,16,1,12,28,59,55,72,7,41,13,29,63,52,51,18,21,62,1,25,38,80,61,14,42,27,58,64,34]
    ),

    (
        [25,32,27,-2,45,12,-9,34,17,32,-5,-42,-39,-44,31,-4,15,14,-39,-12,-37,38,37,48,-29,34,21,-4,-13,-30,21,-16,11,-2,13,-32,-49,38,37,24,15,-26,37,-40,-17,30,25,24,47,18,-43,-24,3,6,-15,48,3,-2,37,-48,-1,-34,5,40,19,-18,5,-8,15,34,-27,-28,-25,-22,-15,-12,-5,26,-7,8,-1,34,9,32,-45,30,5,16,43,46,-3,-37,-2,49,28,-29,-50,-23,8,-21,34,37,28,-1,-6,25,-24,-21,-14,-3,16,-45,-46,13,-16,-45,-26,1,24,-45,18,-19,-48,-17,22,-15,0,-49,14,33,4,-37,38,45,-8,-1,18,9,48,35,-14,-27,48,7,30,25,12,-1,-2,-47,44,-5,-50,49,24,39,-38,-19,-12,-1,-38,-11,-44,15,-6,21,4,-13,-30,-3,32,-29,-50,-35,-16,19,14,37,-44,-1,-34,-15,24,11,10,-27,-24,23,-50,-19,-4,47,22,-31,0,-17,18,25,-8,7,38,49,16,39,18,41,8,-41,18,17,20,23,-50,49,-48,31,-14,25,24,-41,38,33,-20,47,-42,49,-8,15,-42,-43,-12,19,-22,13,-28,47,-26,25,-32,27,-22,-39,44,11,34,37,-32,3,26,-27,36,-1,2,-43,20,-1,-6,-15,-44,27,46,33,-28,11,6,1,-4,39,10,-39,-28,11,-38,5,-12,-13,-10,-35],
        [74,80,76,47,92,61,40,82,66,80,44,9,12,7,79,45,64,63,12,37,14,86,85,95,20,82,70,45,36,19,70,33,60,47,62,17,2,86,85,73,64,23,85,11,32,78,74,73,94,67,8,25,52,55,34,95,52,47,85,3,48,16,54,88,68,31,54,41,64,82,22,21,24,27,34,37,44,75,42,57,48,82,58,80,6,78,54,65,90,93,46,14,47,96,77,20,1,26,57,28,82,85,77,48,43,74,25,28,35,46,65,6,5,62,33,6,23,50,73,6,67,30,3,32,71,34,49,2,63,81,53,14,86,92,41,48,67,58,95,83,35,22,95,56,78,74,61,48,47,4,91,44,1,96,73,87,13,30,37,48,13,38,7,64,43,70,53,36,19,46,80,20,1,15,33,68,63,85,7,48,16,34,73,60,59,22,25,72,1,30,45,94,71,18,49,32,67,74,41,56,86,96,65,87,67,89,57,10,67,66,69,72,1,96,3,79,35,74,73,10,86,81,29,94,9,96,41,64,9,8,37,68,27,62,21,94,23,74,17,76,27,12,91,60,82,85,17,52,75,22,84,48,51,8,69,48,43,34,7,76,93,81,21,60,55,50,45,87,59,12,21,60,13,54,37,36,39,15]
    ),


    ([40,10,20,30], [4,1,2,3]),
    ([100,100,100], [1,1,1]),
    ([37,12,28,9,100,56,80,5,12], [5,3,4,2,8,6,7,1,3])
]

for test in tests:
    result = Solution().arrayRankTransform(test[0])
    if result == test[1]:
        print("PASS")
    else:
        print("FAIL - " + str(result))