"""
https://leetcode.com/explore/featured/card/march-leetcoding-challenge-2021/589/week-2-march-8th-march-14th/3665/
https://leetcode.com/problems/remove-palindromic-subsequences/

Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.



Example 1:

Input: s = "ababa"
Output: 1
Explanation: Strings is already palindrome
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "".
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "".
Remove palindromic subsequence "baab" then "b".
Example 4:

Input: s = ""
Output: 0


Constraints:

0 <= s.length <= 1000
s only consists of letters 'a' and 'b'
"""


# Runtime: 36 ms, faster than 18.82% of Python3 online submissions for Remove Palindromic Subsequences.
# Memory Usage: 14.3 MB, less than 42.94% of Python3 online submissions for Remove Palindromic Subsequences.
class Solution:
    def removePalindromeSub(self, s: str) -> int:
        if not s:
            return 0

        def isPalindrome(s: str) -> bool:
            n = len(s)
            n2 = n // 2
            for i in range(n2):
                if s[i] != s[-i-1]:
                    return False
            return True

        if isPalindrome(s):
            return 1
        return 2




tests = [
    ("ababa", 1),
    ("abb", 2),
    ("baabb", 2),
    ("", 0)
]

for test in tests:
    result = Solution().removePalindromeSub(test[0])
    if result == test[1]:
        print("PASS")
    else:
        print("FAIL - " + str(result))